/**
* KlarnaPaymentsCancelOrder.ds
*
* API call to cancel an existing Klarna Payments order
*
* @input Order : dw.order.Order The SCC Order object
* @input LocaleObject : dw.object.CustomObject
*/

// import packages
var Logger = require( 'dw/system/Logger' );
var logger = Logger.getLogger( 'KlarnaPaymentsCancelOrder.ds' );
var KlarnaPayments = {
	httpService 			: require('*/cartridge/scripts/common/KlarnaPaymentsHttpService.ds'),
	apiContext 				: require('*/cartridge/scripts/common/KlarnaPaymentsApiContext')
};

function execute( args : PipelineDictionary ) : Number
{
	var localeObject = args.LocaleObject;
	
	try {
		var klarnaPaymentsHttpService = new KlarnaPayments.httpService();
        var klarnaApiContext = new KlarnaPayments.apiContext();
        var requestUrl = dw.util.StringUtils.format(klarnaApiContext.getFlowApiUrls().get('cancelOrder'), args.Order.custom.kpOrderID);
        
		klarnaPaymentsHttpService.call(requestUrl, 'POST', localeObject.custom.credentialID, null);

	} catch (e) {
		logger.error(e);
		return PIPELET_ERROR;
	}
    
    return PIPELET_NEXT;	
}