<iscontent type="text/javascript" charset="UTF-8" compact="true"/>

<isscript>	
	//determine pre-assesment value
	var Countries = require('app_storefront_core/cartridge/scripts/util/Countries');
	var country = Countries.getCurrent({CurrentRequest: pdict.CurrentRequest}).countryCode;
	
	var preAssessmentCountries = dw.system.Site.getCurrent().getCustomPreferenceValue( 'kpPreAssessment' );
	var preAssement = false;
	if ( !empty( preAssessmentCountries ) && ( preAssessmentCountries.indexOf( country ) !== -1 ) && !isCountryInEU( country ) )
	{
		preAssement = true;
	}
	
	function isCountryInEU( country )
	{

		var isInEU = true;
		var EUCountries = "BE, BG, CZ, DK, DE, EE, IE, EL, ES, FR, HR, IT, CY, LV, LT, LU, HU, MT, NL, AT, PL, PT, RO, SI, SK, FI, SE, UK, GB";
		
		if( EUCountries.indexOf( country ) === -1)
		{
			isInEU = false;
		}

		return isInEU;
	}	
	
	// klarna payments urls
	var KPurls =  {
        createSession		: URLUtils.https('KLARNA_PAYMENTS-CreateSession').toString(), 
        clearSession		: URLUtils.https('KLARNA_PAYMENTS-ClearSession').toString(),
        saveAuth			: URLUtils.https('KLARNA_PAYMENTS-SaveAuth').toString(), 
        updateSession		: URLUtils.https('KLARNA_PAYMENTS-UpdateSession').toString()
	};
	
	//klarna payments objects 
	var KPObjects = {
		sessionID			: pdict.CurrentSession.privacy.KlarnaPaymentsSessionID.toString(),
		clientToken			: pdict.CurrentSession.privacy.KlarnaPaymentsClientToken.toString(), 
		preassesment		: preAssement
	};	
</isscript>
(function(app){
	window.KlarnaPaymentsUrls = <isprint value="${JSON.stringify(KPurls)}" encoding="off"/>;
	window.KlarnaPaymentsObjects = <isprint value="${!empty(KPObjects) ? JSON.stringify(KPObjects) : '[]'}" encoding="off"/>;
}(window.app = window.app || {}));